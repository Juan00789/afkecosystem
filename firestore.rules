
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isClient(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)/clients/$(request.auth.uid));
    }
    
    function isProviderForClient(clientId, providerId) {
      let clientDoc = get(/databases/$(database)/documents/users/$(clientId));
      return clientDoc.data.mainProviderId == providerId;
    }

    // USER PROFILES
    match /users/{userId} {
      allow get: if isUserAuthenticated();
      allow list, update, delete: if isOwner(userId);
      allow create: if isUserAuthenticated() && request.resource.id == request.auth.uid;
      
      // Subcollection for providers linked by a client
      match /providers/{providerDocId} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // CLIENTS (of a provider)
    match /clients/{clientId} {
      allow read, write, delete: if isOwner(request.resource.data.userId);
    }
    
    // SERVICES (offered by a provider)
    match /services/{serviceId} {
        allow read: if isUserAuthenticated(); // Anyone logged in can see services
        allow write, delete: if isOwner(request.resource.data.userId); // Only provider can manage their own services
    }

    // CASES
    match /cases/{caseId} {
      allow read: if isOwner(resource.data.clientId) || isOwner(resource.data.providerId);
      allow create: if isOwner(request.resource.data.clientId);
      allow update: if isOwner(resource.data.clientId) || isOwner(resource.data.providerId);
      
      // Comments/Timeline within a case
      match /comments/{commentId} {
          allow read: if isOwner(get(/databases/$(database)/documents/cases/$(caseId)).data.clientId) || isOwner(get(/databases/$(database)/documents/cases/$(caseId)).data.providerId);
          allow create: if isOwner(request.resource.data.userId) && (isOwner(get(/databases/$(database)/documents/cases/$(caseId)).data.clientId) || isOwner(get(/databases/$(database)/documents/cases/$(caseId)).data.providerId));
      }
    }
    
    // INVOICES
    match /invoices/{invoiceId} {
        allow read: if isOwner(resource.data.clientId) || isOwner(resource.data.providerId);
        allow create: if isOwner(request.resource.data.providerId);
    }

  }
}
