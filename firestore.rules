rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Users can only read and write to their own user document.
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      allow create: if request.auth.uid != null;
    }

    // Providers can manage their clients, clients can't see other clients.
    match /clients/{clientId} {
      allow read, write: if isOwner(resource.data.userId);
    }

    // Providers can manage their services.
    // Clients can read services if the service's userId matches their mainProviderId.
    match /services/{serviceId} {
      allow read: if request.auth.uid != null;
      allow create, update, delete: if isOwner(resource.data.userId);
    }
    
    // Case data can be read by the owner (provider) or the assigned client.
    match /cases/{caseId} {
      allow read: if isOwner(resource.data.userId) || isOwner(resource.data.clientId);
      allow create, update: if isOwner(resource.data.userId);

      // Comments can be created by the provider or the client of the case.
      // Users can only edit/delete their own comments.
      match /comments/{commentId} {
        allow read: if isOwner(get(/databases/$(database)/documents/cases/$(caseId)).data.userId) || isOwner(get(/databases/$(database)/documents/cases/$(caseId)).data.clientId);
        allow create: if isOwner(request.resource.data.userId);
        allow update, delete: if isOwner(resource.data.userId);
      }
    }
  }
}
