
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // USERS: Users can manage their own profile. Authenticated users can look up others by phone number.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
      
      // PROVIDERS SUBCOLLECTION: A user can manage their own list of providers.
      match /providers/{providerId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
    }

    // CLIENTS: Providers can manage their own client list.
    match /clients/{clientId} {
      allow read, write, delete: if request.auth.uid == request.resource.data.providerId;
    }

    // SERVICES: Providers can manage their own services. Authenticated users can view services.
    match /services/{serviceId} {
      allow read: if request.auth != null;
      allow write, delete: if request.auth.uid == request.resource.data.userId;
    }

    // CASES: Clients/Providers can only access cases they are part of. Clients can delete cases.
    match /cases/{caseId} {
      allow read, update: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      allow create: if request.auth.uid == request.resource.data.clientId;
      allow delete: if request.auth.uid == resource.data.clientId;

      // COMMENTS: Only participants of the case can read/write comments.
      match /comments/{commentId} {
        allow read, create: if request.auth.uid == get(/databases/$(database)/documents/cases/$(caseId)).data.clientId || request.auth.uid == get(/databases/$(database)/documents/cases/$(caseId)).data.providerId;
      }
    }

    // INVOICES: Only participants of the case can read invoices. Only providers can create them.
    match /invoices/{invoiceId} {
       allow read: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
       allow create: if request.auth.uid == request.resource.data.providerId;
    }
  }
}

    