
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // USERS: Users can only read/write their own profile data.
    // They can be looked up (get) by any authenticated user (e.g., to see a provider's name).
    match /users/{userId} {
      allow get: if request.auth != null;
      allow list, update, delete, create: if request.auth.uid == userId;
      
      // PROVIDERS (subcollection): User can manage their own list of providers.
      match /providers/{providerId} {
        allow read, write: if request.auth.uid == userId;
      }
    }

    // CLIENTS: Providers can manage their own clients.
    match /clients/{clientId} {
      allow read, write: if request.auth.uid == request.resource.data.userId;
    }
    
    // SERVICES: Any authenticated user can read services. Only owner can write.
    match /services/{serviceId} {
        allow read: if request.auth != null;
        allow write: if request.auth.uid == request.resource.data.userId;
    }
    
    // CASES: Only the client or provider involved in the case can read/write it.
    match /cases/{caseId} {
        allow read, update: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
        allow create: if request.auth.uid == request.resource.data.clientId;
        
        // COMMENTS (subcollection): Only participants of the case can read/write comments.
        match /comments/{commentId} {
             allow read, create: if request.auth.uid == get(/databases/$(database)/documents/cases/$(caseId)).data.clientId || request.auth.uid == get(/databases/$(database)/documents/cases/$(caseId)).data.providerId;
        }
    }
    
     // COMMENTS (collectionGroup): Allow users to query their relevant comments for activity feeds.
    match /{path=**}/comments/{commentId} {
       allow read: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
    }

    // INVOICES: Only the client or provider involved can read the invoice. Only provider can create.
    match /invoices/{invoiceId} {
        allow read: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
        allow create: if request.auth.uid == request.resource.data.providerId;
        allow update, delete: if request.auth.uid == resource.data.providerId;
    }
  }
}
