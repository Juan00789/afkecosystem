rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
      allow list: if request.auth.uid != null; // Allow querying users (e.g., by phone)

      // Subcollection for providers a client is connected to
      match /providers/{providerDocId} {
        allow read, create, delete, list, update: if request.auth.uid == userId;
      }
    }

    match /clients/{clientId} {
      allow read, create, update: if request.auth.uid == resource.data.providerId;
      allow list: if request.auth.uid != null; // Allow querying for hidden game access
    }

    match /services/{serviceId} {
      // Anyone authenticated can read services (for client exploration)
      allow read: if request.auth.uid != null;
      // Only the owner can create, update, or delete them
      allow create, update, delete: if request.auth.uid == request.resource.data.userId;
    }
    
    match /invoices/{invoiceId} {
        allow read, create, update: if request.auth.uid == resource.data.providerId || request.auth.uid == resource.data.clientId;
    }
    
    match /cases/{caseId} {
      allow read, update, create: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      // Deletion is allowed for either party, but controlled by the UI (AI decision)
      allow delete: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      
      match /comments/{commentId} {
        // Anyone authenticated can read comments of a case they are part of
        allow read: if get(/databases/$(database)/documents/cases/$(caseId)).data.clientId == request.auth.uid || get(/databases/$(database)/documents/cases/$(caseId)).data.providerId == request.auth.uid;
        // Only case participants can create comments
        allow create: if request.auth.uid == request.resource.data.clientId || request.auth.uid == request.resource.data.providerId;
      }
    }

  }
}
