rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read/write their own user document.
    // Any authenticated user can read public user profiles.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;

      // Clients can manage their own list of providers
      match /providers/{providerDocId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
    }
    
    // Providers can manage their own list of clients
    match /clients/{clientId} {
      allow read, create: if request.auth.uid == request.resource.data.providerId;
      allow update, delete: if request.auth.uid == resource.data.providerId;
    }
    
    // Providers can manage their own services
    match /services/{serviceId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.userId;
        allow update, delete: if request.auth.uid == resource.data.userId;
    }
    
    // Users can read/write cases they are involved in
    match /cases/{caseId} {
        allow read, write, create, update: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
        
        // Comments can be read/written by participants of the case
        match /comments/{commentId} {
            allow read, create: if get(/databases/$(database)/documents/cases/$(caseId)).data.clientId == request.auth.uid || get(/databases/$(database)/documents/cases/$(caseId)).data.providerId == request.auth.uid;
        }
    }

    // Collection Group rules
    match /{path=**}/comments/{commentId} {
        allow read: if resource.data.clientId == request.auth.uid || resource.data.providerId == request.auth.uid;
    }

    // Invoices can be read by participants
    match /invoices/{invoiceId} {
      allow read, create, update: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
    }
  }
}
