rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read: if request.auth.uid != null;
      allow create: if request.auth.uid == userId;
      allow update, delete: if request.auth.uid == userId;
    }
    
    match /clients/{clientId} {
      allow read, write: if request.auth != null && request.auth.uid == request.resource.data.providerId;
    }

    match /services/{serviceId} {
      allow get, list: if true;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth.uid == resource.data.userId;
    }
    
    match /cases/{caseId} {
      allow read, delete: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      allow create: if request.auth.uid == request.resource.data.clientId || request.auth.uid == request.resource.data.providerId;
      allow update: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      
      // Allow creating comments if the user is part of the case
      match /comments/{commentId} {
        allow read: if request.auth.uid == get(/databases/$(database)/documents/cases/$(caseId)).data.clientId || request.auth.uid == get(/databases/$(database)/documents/cases/$(caseId)).data.providerId;
        allow create: if request.auth.uid != null 
                      && request.auth.uid == request.resource.data.userId
                      && (request.auth.uid == get(/databases/$(database)/documents/cases/$(caseId)).data.clientId 
                          || request.auth.uid == get(/databases/$(database)/documents/cases/$(caseId)).data.providerId);
      }
    }
    
    match /invoices/{invoiceId} {
        allow read, write: if request.auth != null && (request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId);
    }
    
  }
}
