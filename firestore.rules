rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can update their own profile, and any authenticated user can view a profile.
    match /users/{userId} {
      allow get: if request.auth != null;
      allow update: if request.auth.uid == userId;
    }

    // Providers can manage their clients. A client can view their own client entry if they know their provider.
    match /clients/{clientId} {
      // A provider can list their own clients
      allow list: if request.auth != null && request.query.where.path == "userId" && request.query.where.value == request.auth.uid;
      // A provider can get their own client's data
      allow get: if request.auth != null && resource.data.userId == request.auth.uid;
      // A provider can create, update, or delete their own client
      allow write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // Rules for services
    match /services/{serviceId} {
        // Any authenticated user can read services, necessary for clients to see provider offerings.
        allow read: if request.auth != null;
        // Only the provider who owns the service can create, update, or delete it.
        allow create, update, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Cases and their subcollections
    match /cases/{caseId} {
        // For now, allow authenticated users to manage cases. 
        // This should be refined later to owner/client access.
        allow read, write: if request.auth != null;
        
        match /comments/{commentId} {
            // Any authenticated user can read/write comments in a case.
            // This should also be refined later.
            allow read, write: if request.auth != null;
        }
    }
  }
}
