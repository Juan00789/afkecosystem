rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Users can read anyone's profile, but only write to their own.
    // They can also manage their own subcollections.
    match /users/{userId} {
      allow read: if true;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);

      // A user can manage their own network of providers.
      match /providers/{providerDocId} {
        allow read, write: if isOwner(userId);
      }
    }

    // Providers can manage their clients.
    // A user can be linked to a client record during signup.
    match /clients/{clientId} {
      allow read, write: if request.auth != null && request.resource.data.providerId == request.auth.uid;
      // Allow a user to link themselves to a pre-registered client entry.
      allow update: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Services can be listed by anyone (for the landing page),
    // but only created, updated, or deleted by the owner.
    match /services/{serviceId} {
      allow list: if true;
      allow get: if request.auth != null;
      allow create, update, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // Cases can only be accessed by the client or the provider involved.
    match /cases/{caseId} {
      allow read, update, delete: if request.auth != null && (request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId);
      allow create: if request.auth != null; // Anyone authenticated can create a case initially

      // Comments within a case follow the same access rules.
      match /comments/{commentId} {
        allow read, create: if request.auth != null && (request.auth.uid == get(/databases/$(database)/documents/cases/$(caseId)).data.clientId || request.auth.uid == get(/databases/$(database)/documents/cases/$(caseId)).data.providerId);
      }
    }

    // Invoices can only be accessed by the client or provider involved.
    match /invoices/{invoiceId} {
       allow read, write: if request.auth != null && (request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId);
    }
  }
}
