
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth.uid != null;
    }
    
    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
        return request.auth.uid == userId;
    }

    // Users can read and update their own profile
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow update: if isOwner(userId);
      // Logged in users can list other users to find them by phone number
      allow list: if isAuthenticated();
      // Allow creation of a user document during sign-up
      allow create: if isOwner(userId);

      // Providers can be managed by the user themselves
      match /providers/{providerDocId} {
        allow read, write, delete: if isOwner(userId);
      }
    }

    // Clients can be read by their associated provider
    match /clients/{clientId} {
      allow read, write: if isOwner(request.resource.data.providerId);
      // Allow any authenticated user to query the client list (e.g., for the hidden game)
      allow list: if isAuthenticated();
       // Allow a provider to create a client for themselves
      allow create: if isOwner(request.resource.data.providerId);
    }
    
    // Cases can be read by either client or provider
    match /cases/{caseId} {
      allow read, update: if isOwner(resource.data.clientId) || isOwner(resource.data.providerId);
      // Allow creation if the user is the client OR the provider, and the status is "Pendiente"
      allow create: if (isOwner(request.resource.data.clientId) || isOwner(request.resource.data.providerId)) && request.resource.data.status == 'Pendiente';
      // Only allow deletion if the user is the client or the provider (gated by UI logic)
      allow delete: if isOwner(resource.data.clientId) || isOwner(resource.data.providerId);

        // Comments can be read by either party, created by either party
        match /comments/{commentId} {
            allow read: if isOwner(resource.data.clientId) || isOwner(resource.data.providerId);
            allow create: if isOwner(request.resource.data.clientId) || isOwner(request.resource.data.providerId);
        }
    }
    
     // Invoices can be read by either client or provider
    match /invoices/{invoiceId} {
        allow read: if isOwner(resource.data.clientId) || isOwner(resource.data.providerId);
        // Only the provider can create an invoice
        allow create: if isOwner(request.resource.data.providerId);
    }

    // Services can be read by anyone, but only managed by their owner
    match /services/{serviceId} {
        allow read: if isAuthenticated();
        allow create, update, delete: if isOwner(request.resource.data.userId);
    }

  }
}
