
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can manage their own profile.
    // Any authenticated user can get another user's public profile (needed for network/cases).
    // Any authenticated user can list users by phone number (to add to network).
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
      allow get: if request.auth != null;
      allow list: if request.auth != null && "phoneNumber" in request.query.where;
    }
    
    // A provider manages their own client records.
    match /clients/{clientId} {
      allow create, read, update, delete: if request.auth.uid == request.resource.data.providerId || request.auth.uid == resource.data.providerId;
    }

    // A client manages their own list of providers.
    match /users/{userId}/providers/{providerDocId} {
      allow read, create, delete, list: if request.auth.uid == userId;
    }
    
    // A provider manages their own services. Authenticated users can read them.
    match /services/{serviceId} {
      allow create, update, delete: if request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null;
    }
    
    // Cases can be read by either the client or provider.
    // They can be created by the client.
    // They can be updated by either party.
    // They can be deleted only by the client.
    match /cases/{caseId} {
      allow read, update: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      allow create: if request.auth.uid == request.resource.data.clientId;
      allow delete: if request.auth.uid == resource.data.clientId;
    }

    // Comments can be read by client or provider, and created by either.
    match /cases/{caseId}/comments/{commentId} {
      allow read, create: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
    }
    
    // Invoices can be read by client or provider.
    // They can only be created by the provider.
    match /invoices/{invoiceId} {
        allow read: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
        allow create: if request.auth.uid == request.resource.data.providerId;
    }
  }
}
