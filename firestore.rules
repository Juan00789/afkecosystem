rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for profile completeness ("authenticity")
    function isProfileComplete(profile) {
      return profile.companyName != null && profile.companyName != '';
    }

    match /users/{userId} {
      // Anyone can read a user's public profile
      allow read: if true;
      
      // A user can create their own profile document
      allow create: if request.auth.uid == userId;
      
      // A user can update their own profile.
      // Credits can only go below zero if the profile is incomplete.
      allow update: if request.auth.uid == userId && request.resource.data.uid == userId
                    && (
                      request.resource.data.credits >= 0 || !isProfileComplete(request.resource.data)
                    );
    }
    
    match /services/{serviceId} {
      allow read: if true;
      allow write: if request.auth != null && request.resource.data.providerId == request.auth.uid;
    }

    match /cases/{caseId} {
      allow read, write: if request.auth != null && 
                             (request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId);
      
      // Comments subcollection
      match /comments/{commentId} {
        allow read, create: if request.auth != null &&
                                exists(/databases/$(database)/documents/cases/$(caseId)) &&
                                (request.auth.uid == get(/databases/$(database)/documents/cases/$(caseId)).data.clientId ||
                                 request.auth.uid == get(/databases/$(database)/documents/cases/$(caseId)).data.providerId);
      }
    }
    
    match /courses/{courseId} {
        allow read: if true;
        allow create: if request.auth.uid == request.resource.data.providerId;
        allow update, delete: if request.auth.uid == resource.data.providerId;
    }

    match /credit_requests/{requestId} {
      allow read, create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      // Admins would have broader permissions, managed via custom claims or a separate collection.
    }
  }
}
