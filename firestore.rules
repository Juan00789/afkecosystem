
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read other user profiles if authenticated,
    // and can only write to their own profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // Anyone authenticated can create a case.
    // Only the client or provider involved in a case can read or update it.
    match /cases/{caseId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      
      // Only the client or provider can read/write comments on a case.
      match /comments/{commentId} {
        allow read, write: if get(/databases/$(database)/documents/cases/$(caseId)).data.clientId == request.auth.uid || get(/databases/$(database)/documents/cases/$(caseId)).data.providerId == request.auth.uid;
      }
    }

    // Services can be read by any authenticated user.
    // Only the provider of a service can create, update, or delete it.
    match /services/{serviceId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth.uid == request.resource.data.providerId;
    }

    // Courses can be read by any authenticated user.
    // Only the provider of a course can create, update, or delete it.
    match /courses/{courseId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth.uid == request.resource.data.providerId;
    }
  }
}
