rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
      allow list: if request.auth.uid != null; // Allow authenticated users to query the collection (e.g., to find a provider by phone)

      match /providers/{providerDocId} {
        // A user can manage their own list of providers.
        allow read, create, delete, list, update: if request.auth.uid == userId;
      }
    }

    match /clients/{clientId} {
      // Only the provider who created the client record can manage it.
      allow read, write, delete: if request.auth.uid == resource.data.providerId;
    }

    match /services/{serviceId} {
      // Any authenticated user can read services (for the "explore" page)
      allow read: if request.auth.uid != null;
      // Only the provider who owns the service can create, update or delete it.
      allow create, update, delete: if request.auth.uid == request.resource.data.userId;
    }

    match /cases/{caseId} {
      // Only the client or the provider involved in the case can read it.
      allow read, update: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
       // Allow deletion only by the client or provider (the UI logic controlled by the AI will show/hide the button).
      allow delete: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      // A new case can be created by a client.
      allow create: if request.auth.uid == request.resource.data.clientId;

      match /comments/{commentId} {
        // Only the client or provider involved can read comments.
        allow read: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
        // Any authenticated user involved in the case can create a comment.
        allow create: if request.auth.uid == request.resource.data.userId &&
                       (request.auth.uid == get(/databases/$(database)/documents/cases/$(caseId)).data.clientId ||
                        request.auth.uid == get(/databases/$(database)/documents/cases/$(caseId)).data.providerId);
      }
    }
    
    match /invoices/{invoiceId} {
      // Only the client or provider involved can read it.
      allow read: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      // Only the provider can create the invoice.
      allow create: if request.auth.uid == request.resource.data.providerId;
    }
  }
}
