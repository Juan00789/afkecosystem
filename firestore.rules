rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth.uid == userId;

      match /providers/{providerDocId} {
        allow read, create, delete: if request.auth.uid == userId;
        allow update: if request.auth.uid == userId;
      }
    }
    
    match /clients/{clientId} {
      allow create: if request.auth != null && request.resource.data.providerId == request.auth.uid;
      allow read, update: if request.auth != null && 
                             (resource.data.providerId == request.auth.uid || 
                              (request.resource.data.userId != null && request.resource.data.userId == request.auth.uid));
      allow delete: if request.auth != null && resource.data.providerId == request.auth.uid;
    }
    
    match /cases/{caseId} {
      allow create: if request.auth != null && (request.resource.data.clientId == request.auth.uid || request.resource.data.providerId == request.auth.uid);
      allow get, list: if request.auth != null && (resource.data.clientId == request.auth.uid || resource.data.providerId == request.auth.uid);
      allow update, delete: if request.auth != null && (resource.data.clientId == request.auth.uid || resource.data.providerId == request.auth.uid);
      
      match /comments/{commentId} {
        allow read, create: if request.auth != null && (resource.data.clientId == request.auth.uid || resource.data.providerId == request.auth.uid);
      }
    }
    
    match /services/{serviceId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    match /invoices/{invoiceId} {
        allow create: if request.auth != null;
        allow get, list: if request.auth != null && (resource.data.clientId == request.auth.uid || resource.data.providerId == request.auth.uid);
    }
  }
}
