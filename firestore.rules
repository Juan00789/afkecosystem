
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read public profiles, but only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == userId;
    }

    // Anyone can read services. Only the owning provider can manage them.
    match /services/{serviceId} {
      allow read: if request.auth != null;
      // For create, check the ID in the incoming data.
      allow create: if request.auth.uid == request.resource.data.providerId;
      // For update/delete, check the ID in the existing data.
      allow update, delete: if request.auth.uid == resource.data.providerId;
    }

    // Only the client or provider can read/update a case. Only a client can create.
    match /cases/{caseId} {
      allow read, update: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      allow create: if request.auth.uid == request.resource.data.clientId;
    }

    // Only participants of a case can read/write comments.
    match /cases/{caseId}/comments/{commentId} {
      // Allow read/write if the user is part of the parent case document.
      allow read, create: if get(/databases/$(database)/documents/cases/$(caseId)).data.clientId == request.auth.uid || get(/databases/$(database)/documents/cases/$(caseId)).data.providerId == request.auth.uid;
    }
  }
}
