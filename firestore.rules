rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Reglas para la colección 'users'
    match /users/{userId} {
      // Un usuario puede leer y escribir en su propio documento.
      allow get, update, delete: if request.auth != null && request.auth.uid == userId;
      // Cualquiera puede crear un documento de usuario (durante el registro).
      allow create: if request.auth != null;
    }

    // Reglas para la colección 'clients'
    match /clients/{clientId} {
      // Un proveedor puede realizar todas las acciones sobre sus propios clientes.
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
      // Un proveedor puede listar los clientes que le pertenecen.
      allow list: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // Reglas para la colección 'services'
    match /services/{serviceId} {
      // El proveedor dueño del servicio puede actualizarlo y eliminarlo.
      allow update, delete: if request.auth != null && get(/databases/$(database)/documents/services/$(serviceId)).data.userId == request.auth.uid;
      // Un proveedor puede crear un nuevo servicio.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      
      // Un cliente puede leer los servicios si su mainProviderId coincide con el userId del servicio.
      // Un proveedor puede leer sus propios servicios.
      allow read: if request.auth != null && (
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.mainProviderId == resource.data.userId)
         || resource.data.userId == request.auth.uid
      );
    }
    
    // Reglas para los comentarios dentro de los casos
    match /cases/{caseId}/comments/{commentId} {
      // Cualquiera autenticado puede leer y crear comentarios en un caso.
      // Aquí se podría añadir lógica más compleja (ej. solo participantes del caso).
      allow read, create: if request.auth != null;
    }

  }
}