
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow list: if request.auth.uid != null;
      
      match /providers/{providerDocId} {
        allow read, create, delete, list: if request.auth.uid == userId;
      }
    }
    
    match /clients/{clientDocId} {
      allow read, create, delete: if request.auth.uid == request.resource.data.providerId;
      allow list: if request.auth.uid != null;
    }
    
    match /services/{serviceId} {
      // Any authenticated user can read services to explore them
      allow read, list: if request.auth.uid != null;
      // Only the owner can create, update, or delete their services
      allow create, update, delete: if request.auth.uid == request.resource.data.userId;
    }

    match /cases/{caseId} {
      allow read, update: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      allow create: if request.auth.uid == request.resource.data.clientId || request.auth.uid == request.resource.data.providerId;
      allow delete: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;

      match /comments/{commentId} {
        allow read, create: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      }
    }
    
    match /invoices/{invoiceId} {
       allow read, list: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
       allow create: if request.auth.uid == request.resource.data.providerId;
    }
  }
}
