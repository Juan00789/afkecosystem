
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // USERS: Users can manage their own profile, and anyone authenticated can find a user by phone number
    match /users/{userId} {
      allow read: if request.auth.uid != null; // Allow any authenticated user to read profiles for connection purposes
      allow write: if request.auth.uid == userId; // Allow user to update their own profile
      
      // PROVIDERS subcollection (for clients to manage their providers)
      match /providers/{providerDocId} {
        allow list, read, create, delete: if request.auth.uid == userId;
      }
    }
    
    // CLIENTS: Only the linked provider can manage their client list
    match /clients/{clientId} {
      allow read, create, update, delete: if request.auth.uid == request.resource.data.providerId;
      allow list: if request.auth.uid != null;
    }

    // SERVICES: Only providers can create/manage services
    match /services/{serviceId} {
      allow read: if request.auth.uid != null;
      allow write: if request.auth.uid == request.resource.data.userId;
    }

    // CASES: Only the client or provider involved can read/update.
    match /cases/{caseId} {
      allow read, update: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      allow create: if request.auth.uid == request.resource.data.clientId;
    
      // COMMENTS subcollection
      match /comments/{commentId} {
        allow read, create: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      }
    }
    
    // INVOICES: Only the provider can create, both parties can read.
    match /invoices/{invoiceId} {
      allow read: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      allow create: if request.auth.uid == request.resource.data.providerId;
      allow update: if request.auth.uid == resource.data.clientId; // Client can mark as paid
    }
  }
}
