rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is the client or provider for a given case
    function isCaseParticipant(caseId) {
      let caseData = get(/databases/$(database)/documents/cases/$(caseId)).data;
      return request.auth.uid == caseData.clientId || request.auth.uid == caseData.providerId;
    }

    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    match /clients/{clientId} {
      allow read, write: if request.auth.uid != null; 
    }

    match /services/{serviceId} {
      allow read;
      allow write: if request.auth.uid == request.resource.data.userId;
    }

    match /cases/{caseId} {
      allow read, create: if request.auth.uid != null;
      allow update: if isCaseParticipant(caseId);
      allow delete: if isCaseParticipant(caseId);

      // Rules for the 'comments' subcollection
      match /comments/{commentId} {
        allow read: if isCaseParticipant(caseId);
        allow create: if isCaseParticipant(caseId) && request.auth.uid == request.resource.data.userId;
        allow update, delete: if isCaseParticipant(caseId) && request.auth.uid == resource.data.userId;
      }
    }

     match /invoices/{invoiceId} {
       allow read, create: if request.auth.uid != null;
       allow update, delete: if request.auth.uid == resource.data.providerId;
    }
  }
}
