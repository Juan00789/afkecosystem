
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
  
    // Function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
  
    // Match user avatars
    match /avatars/{userId}/{fileName} {
      // Allow read access to everyone for public profiles
      allow read;
      
      // Allow write (create, update) only for the authenticated user on their own path
      allow write: if isAuthenticated() && request.auth.uid == userId
                   // Check file type
                   && request.resource.contentType.matches('image/png|image/jpeg|image/gif')
                   // Check file size (e.g., max 5MB)
                   && request.resource.size < 5 * 1024 * 1024;
    }
    
    // Match course cover images
    match /course-covers/{userId}/{fileName} {
        allow read;
        allow write: if isAuthenticated() && request.auth.uid == userId
                    && request.resource.contentType.matches('image/png|image/jpeg')
                    && request.resource.size < 5 * 1024 * 1024;
    }
    
    // Match product images
    match /product-images/{userId}/{fileName} {
        allow read;
        allow write: if isAuthenticated() && request.auth.uid == userId
                    && request.resource.contentType.matches('image/png|image/jpeg')
                    && request.resource.size < 5 * 1024 * 1024;
    }
    
    // Match expense documents (more restrictive)
    match /expense-documents/{userId}/{fileName} {
        // Only the user who uploaded it can read or write
        allow read, write: if isAuthenticated() && request.auth.uid == userId
                          // Allow common document types
                          && (request.resource.contentType.matches('image/.*') || request.resource.contentType == 'application/pdf')
                          && request.resource.size < 10 * 1024 * 1024; // 10MB limit for docs
    }
  }
}
