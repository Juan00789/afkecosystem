rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read: if request.auth.uid != null;
      allow create;
      allow update: if request.auth.uid == userId;

      match /providers/{providerId} {
        allow read, create, delete: if request.auth.uid == userId;
        allow update: if request.auth.uid == userId;
      }
    }

    match /clients/{clientId} {
      allow read: if request.auth.uid == resource.data.providerId;
      allow create: if request.auth.uid == request.resource.data.providerId;
      allow list: if request.auth.uid != null;
    }
    
    match /services/{serviceId} {
        allow create: if request.auth.uid == request.resource.data.userId;
        allow read: if request.auth.uid == resource.data.userId || request.auth.uid != null;
        allow list: if request.auth.uid != null;
        allow update, delete: if request.auth.uid == resource.data.userId;
    }

    match /cases/{caseId} {
      allow read: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      allow create: if (request.auth.uid == request.resource.data.clientId || request.auth.uid == request.resource.data.providerId) && request.resource.data.status == 'Pendiente';
      allow update: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      allow delete: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      allow list: if request.auth.uid != null;

      match /comments/{commentId} {
        allow read, create: if request.auth.uid == request.resource.data.clientId || request.auth.uid == request.resource.data.providerId;
      }
    }

    match /invoices/{invoiceId} {
      allow read, create, update: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      allow list: if request.auth.uid != null;
    }

  }
}
