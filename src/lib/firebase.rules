rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Can read their own data, anyone can create, can update their own data.
    // Authenticated users can read other user profiles to establish connections.
    match /users/{userId} {
      allow read: if request.auth.uid != null;
      allow update, delete: if request.auth.uid == userId;
      allow create;

      // Clients can add providers to their subcollection
      match /providers/{providerId} {
        allow read, create, delete: if request.auth.uid == userId;
        allow update: if request.auth.uid == userId;
      }
    }

    // Clients: Providers can manage their clients.
    // A client can only be created by their assigned provider.
    match /clients/{clientId} {
      allow read: if request.auth.uid == resource.data.providerId;
      allow create: if request.auth.uid == request.resource.data.providerId;
      allow update, delete: if request.auth.uid == resource.data.providerId;
    }
    
    // Services: Can be read by any authenticated user for the explore page.
    // Users can only manage their own services.
    match /services/{serviceId} {
        allow create: if request.auth.uid == request.resource.data.userId;
        allow read: if request.auth.uid != null;
        allow update, delete: if request.auth.uid == resource.data.userId;
    }

    // Invoices: Can be accessed by either the client or the provider.
    match /invoices/{invoiceId} {
        allow read: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
        allow create: if request.auth.uid == request.resource.data.providerId;
        allow update: if request.auth.uid == resource.data.providerId;
    }

    // Cases: Can be accessed and updated by either client or provider.
    match /cases/{caseId} {
      allow read: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      allow create: if request.auth.uid == request.resource.data.clientId || request.auth.uid == request.resource.data.providerId;
      allow update: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      allow delete: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      allow list: if request.auth.uid != null;

      // Comments: Can be created by client or provider on a case they have access to.
      // Anyone on the case can read all comments.
      match /comments/{commentId} {
        allow create: if (request.auth.uid == get(/databases/$(database)/documents/cases/$(caseId)).data.clientId || request.auth.uid == get(/databases/$(database)/documents/cases/$(caseId)).data.providerId);
        allow read: if (request.auth.uid == get(/databases/$(database)/documents/cases/$(caseId)).data.clientId || request.auth.uid == get(/databases/$(database)/documents/cases/$(caseId)).data.providerId);
      }
    }
  }
}
